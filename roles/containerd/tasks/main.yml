# vim: set ft=Ansible ts=2


# - name: Install Containerd
#   ansible.builtin.package:
#     name: containerd
#     state: present
#   when:
#     - not jpclipffel_container_containerd_configonly
#   tags: [never, setup]


- name: Install Containerd
  include_tasks:
    file: "install_{{ ansible_distribution | lower }}.yml"
  when:
    - not jpclipffel_container_containerd_configonly
  tags: [never, setup]


- name: Create Containerd configuration root
  ansible.builtin.file:
    path: "{{ jpclipffel_container_containerd_root_path }}"
    state: directory
    mode: 0755
  tags: [never, setup]


- name: Get Containerd configuration status
  ansible.builtin.stat:
    path: "{{ jpclipffel_container_containerd_config_path }}"
  register: __containerd_config
  tags: [never, setup]


- name: Initialize Containerd configuration
  ansible.builtin.shell: |
    containerd config default > {{ jpclipffel_container_containerd_config_path }}
  when:
    - not __containerd_config.stat.exists
  tags: [never, setup]


- name: Enable SystemdCgroup
  ansible.builtin.replace:
    path: "{{ jpclipffel_container_containerd_config_path }}"
    regexp: 'SystemdCgroup\s*=\s*false'
    replace: 'SystemdCgroup = true'
  when:
    - jpclipffel_container_containerd_systemdcgroup is true
  tags: [never, setup]


- name: Configure Containerd
  ansible.builtin.include_tasks:
    file: config.yml
  tags: [never, setup]


- name: Restart and enable Containerd service
  ansible.builtin.systemd:
    name: containerd
    state: restarted
    enabled: true
  when:
    - not jpclipffel_container_containerd_configonly
  tags: [never, setup]


# ---


- name: Deconfigure Containerd
  ansible.builtin.include_tasks:
    file: config.yml
  tags: [never, teardown, remove]


- name: Remove remaining containers
  ansible.builtin.shell: |
    crictl rm --all --force
  failed_when: false
  when:
    - not jpclipffel_container_containerd_configonly
  tags: [never, remove]


- name: Remove remaining images
  ansible.builtin.shell: |
    crictl rmi --all
  failed_when: false
  when:
    - not jpclipffel_container_containerd_configonly
  tags: [never, remove]


- name: Disable Containerd service
  ansible.builtin.systemd:
    name: containerd
    state: stopped
    enabled: false
  when:
    - not jpclipffel_container_containerd_configonly
  tags: [never, teardown, remove]


- name: Uninstall Containerd
  ansible.builtin.package:
    name: containerd
    state: absent
  when:
    - not jpclipffel_container_containerd_configonly
  tags: [never, remove]
